{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/roland/repos/learn2spell-app/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: auto;\\n  width: 500px;\\n  padding-top: 80px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Component } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport { Router } from \"../routes\";\nimport { Link } from \"../components/Link\";\nimport Layout from \"../components/Layout\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\"; // import { Title, Body } from \"../components/Text\";\n\nimport config from \"../config\"; // import { TouchLogin } from \"../components/Login\";\n\nvar LoginContainer = styled.div(_templateObject());\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Signup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Signup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      email: \"\",\n      password: \"\",\n      passwordVerification: \"\",\n      submitting: false,\n      tips: {}\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"login\", function _callee() {\n      var _this$props, checkAuth, submitting, _this$state, email, password, tips, response;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, checkAuth = _this$props.checkAuth, submitting = _this$props.submitting;\n              _this$state = _this.state, email = _this$state.email, password = _this$state.password;\n\n              if (!submitting) {\n                _context.next = 4;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 4:\n              if (!(email.length === 0 && password.length === 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 6:\n              _this.setState({\n                submitting: true\n              });\n\n              tips = {};\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(axios({\n                url: config.api.host + \"/auth\",\n                method: \"POST\",\n                data: {\n                  email: email,\n                  password: password\n                },\n                withCredentials: true\n              }));\n\n            case 10:\n              response = _context.sent;\n\n              _this.setState({\n                submitting: false\n              });\n\n              if (response.data.error) {\n                _context.next = 18;\n                break;\n              }\n\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(checkAuth());\n\n            case 15:\n              Router.pushRoute(\"dashboard\");\n              _context.next = 21;\n              break;\n\n            case 18:\n              if (response.data.error === \"not_registered\") {\n                tips.email = \"Seems like you have the wrong email?\";\n              }\n\n              if (response.data.error === \"incorrect_password\") {\n                tips.password = \"You've got the password wrong\";\n              }\n\n              if (response.data.error === \"not_verified\") {\n                tips.email = \"Looks like you haven't confirmed your email...\";\n              }\n\n            case 21:\n              _this.setState({\n                tips: tips\n              });\n\n              console.log(response);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangeEmail\", function (ev) {\n      _this.setState({\n        email: ev.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onChangePassword\", function (ev) {\n      _this.setState({\n        password: ev.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onKeyDown\", function (event) {\n      if (event && event.key === \"Enter\") {\n        event.preventDefault();\n        event.stopPropagation();\n\n        _this.login();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          auth = _this$props2.auth,\n          user = _this$props2.user,\n          isTouch = _this$props2.isTouch;\n\n      if (auth) {\n        Router.pushRoute(\"dashboard\");\n      }\n\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          submitting = _this$state2.submitting,\n          tips = _this$state2.tips;\n      return __jsx(Layout, {\n        auth: auth,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, __jsx(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Login - Jaresume\"), __jsx(LoginContainer, {\n        onKeyDown: this.onKeyDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Login\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), __jsx(Input, {\n        label: \"Email\",\n        subLabel: tips.email,\n        type: \"email\",\n        onChange: this.onChangeEmail,\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), __jsx(Input, {\n        type: \"password\",\n        label: \"Password\",\n        subLabel: tips.password,\n        onChange: this.onChangePassword,\n        value: password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), __jsx(Button, {\n        disabled: submitting,\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Login\")), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nexport { Signup as default };","map":{"version":3,"sources":["/home/roland/repos/learn2spell-app/pages/login.js"],"names":["Component","styled","axios","Head","Router","Link","Layout","Input","Button","config","LoginContainer","div","Signup","email","password","passwordVerification","submitting","tips","props","checkAuth","state","length","setState","url","api","host","method","data","withCredentials","response","error","pushRoute","console","log","ev","target","value","event","key","preventDefault","stopPropagation","login","auth","user","isTouch","onKeyDown","onChangeEmail","onChangePassword"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\n\nimport { Router } from \"../routes\";\nimport { Link } from \"../components/Link\";\nimport Layout from \"../components/Layout\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\n// import { Title, Body } from \"../components/Text\";\nimport config from \"../config\";\n// import { TouchLogin } from \"../components/Login\";\n\nconst LoginContainer = styled.div`\n  margin: auto;\n  width: 500px;\n  padding-top: 80px;\n`;\n\nexport default class Signup extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    passwordVerification: \"\",\n    submitting: false,\n    tips: {}\n  };\n  login = async () => {\n    const { checkAuth, submitting } = this.props;\n    const { email, password } = this.state;\n    if (submitting) {\n      return false;\n    }\n    if (email.length === 0 && password.length === 0) {\n      return false;\n    }\n    this.setState({ submitting: true });\n    const tips = {};\n    const response = await axios({\n      url: config.api.host + \"/auth\",\n      method: \"POST\",\n      data: { email, password },\n      withCredentials: true\n    });\n    this.setState({ submitting: false });\n    if (!response.data.error) {\n      await checkAuth();\n      Router.pushRoute(\"dashboard\");\n    } else {\n      if (response.data.error === \"not_registered\") {\n        tips.email = \"Seems like you have the wrong email?\";\n      }\n      if (response.data.error === \"incorrect_password\") {\n        tips.password = \"You've got the password wrong\";\n      }\n      if (response.data.error === \"not_verified\") {\n        tips.email = \"Looks like you haven't confirmed your email...\";\n      }\n    }\n    this.setState({\n      tips\n    });\n    console.log(response);\n  };\n\n  onChangeEmail = ev => {\n    this.setState({ email: ev.target.value });\n  };\n  onChangePassword = ev => {\n    this.setState({ password: ev.target.value });\n  };\n  onKeyDown = event => {\n    if (event && event.key === \"Enter\") {\n      event.preventDefault();\n      event.stopPropagation();\n      this.login();\n    }\n  };\n  render() {\n    const { auth, user, isTouch } = this.props;\n\n    if (auth) {\n      Router.pushRoute(\"dashboard\");\n    }\n\n    const { email, password, submitting, tips } = this.state;\n    return (\n      <Layout auth={auth} user={user}>\n         {/* <Head> */}\n           <title>Login - Jaresume</title>\n         {/* </Head> */}\n          <LoginContainer onKeyDown={this.onKeyDown}>\n            <form>\n              <br />\n              <br />\n              <p>Login</p>\n              {/* <Title>Login</Title> */}\n              <br />\n              <br />\n              <Input\n                label=\"Email\"\n                subLabel={tips.email}\n                type=\"email\"\n                onChange={this.onChangeEmail}\n                value={email}\n              />\n              <Input\n                type=\"password\"\n                label=\"Password\"\n                subLabel={tips.password}\n                onChange={this.onChangePassword}\n                value={password}\n              />\n              <Button disabled={submitting} onClick={this.login}>\n                Login\n              </Button>\n            </form>\n\n            <br />\n            <p>\n              {/* Don't have an account? <Link href=\"/signup\">signup</Link> */}\n            </p>\n            <p>\n              {/* Forgot your password? <Link to=\"forgot_password\">reset</Link> */}\n            </p>\n          </LoginContainer>\n      </Layout>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}